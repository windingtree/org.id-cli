/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * An ORGiD project configuration
 */
export type ORGiDCLIProject = OrgIdCliProjectReference;

/**
 * ORGiD CLI local project schema
 */
export interface OrgIdCliProjectReference {
  /**
   * Project file note
   */
  note?: string;
  /**
   * ORGiD CLI configuration
   */
  config?: ProjectConfigReference;
  /**
   * Files deployments information
   */
  deployments?: ProjectDeploymentReference[];
  /**
   * Verifiable credentials
   */
  vcs?: ProjectVcReference[];
  /**
   * List of registered ORGiDs
   */
  orgIds?: ProjectOrgIdsReference[];
  /**
   * List of registered keys
   */
  keys?: ProjectKeysReference[];
  [k: string]: unknown;
}
/**
 * Project configuration object
 */
export interface ProjectConfigReference {
  /**
   * List of network providers configs
   */
  networkProviders?: NetworkProviderConfigReference[];
  /**
   * List of API keys
   */
  apisKeys?: ApiKeyConfigReference[];
  [k: string]: unknown;
}
/**
 * Network provider config record
 */
export interface NetworkProviderConfigReference {
  /**
   * Name of a network provider
   */
  id: string;
  /**
   * A network provider URI with key
   */
  uri: string;
  /**
   * Is URI is encrypted
   */
  encrypted: boolean;
  [k: string]: unknown;
}
/**
 * API key config record
 */
export interface ApiKeyConfigReference {
  /**
   * Name of a API key
   */
  id: string;
  /**
   * API key
   */
  key: string;
  /**
   * Is key is encrypted
   */
  encrypted: boolean;
  [k: string]: unknown;
}
/**
 * Deployment configuration project record
 */
export interface ProjectDeploymentReference {
  /**
   * A type of deployment
   */
  type: "ipfs" | "ipns" | "rest";
  /**
   * Path to the local file
   */
  path: string;
  /**
   * URI of deployed file
   */
  uri: string;
  /**
   * Deployment date in the ISO format
   */
  date: string;
  [k: string]: unknown;
}
/**
 * Verifiable credential project record
 */
export interface ProjectVcReference {
  /**
   * A type of VC
   */
  type: "VerifiableCredential" | "OrgJson";
  /**
   * ORGiD DID of the ORG.JSON
   */
  did?: string;
  /**
   * A verification method used a VC signature creation
   */
  method: string;
  /**
   * Path to the original credential subject source
   */
  payload: string;
  /**
   * Path to the created VC file
   */
  path: string;
  /**
   * URI of a deployed credential file
   */
  uri?: string;
  /**
   * VC creation date in the ISO format
   */
  date: string;
  [k: string]: unknown;
}
/**
 * ORGiD configuration project record
 */
export interface ProjectOrgIdsReference {
  /**
   * ORGiD DID
   */
  did: string;
  /**
   * ORGiD DID salt
   */
  salt: string;
  /**
   * ORGiD owner
   */
  owner: string;
  /**
   * Path to saved raw ORG.JSON
   */
  orgJson?: string;
  /**
   * URI of deployed ORGiD VC
   */
  orgIdVc?: string;
  /**
   * Boolean flag that indicate than the ORGiD is created
   */
  created?: boolean;
  /**
   * Creation/update date in the ISO format
   */
  date?: string;
  [k: string]: unknown;
}
/**
 * Registered key pair project record
 */
export interface ProjectKeysReference {
  /**
   * Type of key pair
   */
  type: "ethereum" | "pem" | "multisig";
  /**
   * A unique key pair tag
   */
  tag: string;
  /**
   * Public key
   */
  publicKey: string;
  /**
   * Encrypted private key (encrypted)
   */
  privateKey: string;
  /**
   * Safe transactions URI
   */
  multisig?: string;
  /**
   * Creation/update date in the ISO format
   */
  date?: string;
  [k: string]: unknown;
}
